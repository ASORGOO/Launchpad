$(document).ready(function(){

    for(var i = 0; i < sound1Srcs.length; i++){
        sounds.push(null);
    }

    for(var i = 0; i < sound1Srcs.length; i++){
        $.ajax({
            type: "POST",
            url: "/get_asset_path",
            data: {file_name: sound1Srcs[i], sindex: i},
            success: function(data, textStatus, jqXHR) {
              //console.log(data);
              // console.log(textStatus);
              // console.log(jqXHR);
              var tempi = parseInt(data.sindex);
              sounds[tempi] = new Howl({urls: [data.asset_path]});
              checkLoaded();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log("Error=" + errorThrown);
            }
          });
    }
    
    $(".soundPack").html("Loading Sounds. This should only take a few seconds");
    
    $(window).resize(function(){
        reformat();
    });
});

var numLoaded = 0;

function checkLoaded(){
    numLoaded++;
    if(numLoaded == 4*12){
        console.log(sounds);
        combSounds = [sounds, sounds1];
        loadKeyboard();
    }
}

function loadKeyboard(){
    for(var i = 0; i < 4; i++){
        $(".buttons").append('<div class="button-row"></div>');
        for(var j = 0; j < 12; j++){
            var press = false;
            if(pressure.indexOf((i*12+j)) != -1)
                press = true
            var str = String.fromCharCode(keyPairs[i*12+j]);
            if(keyPairs[i*12+j] == 13)
                str = "\\n"
            $(".button-row:last").append('<div class="button button-'+(i*12+j)+'" pressure="'+press+'" released="true">'+str+'</div>');
            $('.button-'+(i*12+j)+'').css("background-color", $('.button-'+(i*12+j)+'').attr("pressure") == "true" ? "lightgray" : "white");
        }
    }
    
    $(".soundPack").html("Sound Pack: "+curSound);
    
    reformat();
    
    $(".button").click(function(){
       $(this).attr("pressure", $(this).attr("pressure") == "false" ? "true" : "false");
       $(this).css("background-color", $(this).attr("pressure") == "true" ? "lightgray" : "white");
    });
    
    $(document).keydown(function(e){
        //console.log(e.keyCode);
        if(e.keyCode == 39){
            curSound = 1;
            $(".soundPack").html("Sound Pack: "+curSound);
        }
        else if(e.keyCode == 37){
            curSound = 0;
            $(".soundPack").html("Sound Pack: "+curSound);
        }
        else{
            //console.log(e.keyCode);
            if($(".button-"+(keyPairs.indexOf(e.keyCode))+"").attr("released") == "true")
                combSounds[curSound][keyPairs.indexOf(e.keyCode)].play();
            $(".button-"+(keyPairs.indexOf(e.keyCode))+"").attr("released","false");
            $(".button-"+(keyPairs.indexOf(e.keyCode))+"").css("background-color","rgb(255,160,0)");
        }
    });
    $(document).keyup(function(e){
        if($(".button-"+(keyPairs.indexOf(e.keyCode))+"").attr("pressure") == "true")
            combSounds[curSound][keyPairs.indexOf(e.keyCode)].stop();
        $(".button-"+(keyPairs.indexOf(e.keyCode))+"").attr("released","true");
        $(".button-"+(keyPairs.indexOf(e.keyCode))+"").css("background-color", $(".button-"+(keyPairs.indexOf(e.keyCode))+"").attr("pressure") == "true" ? "lightgray" : "white");
    });
    
    setTimeout(function(){
        intro_loop = 0;
        intro();
    },2000);
}

function intro(){
    intro_loop++;
    keyTap(3);
    setTimeout(function(){
        keyTap(15);
        keyTap(37);
        setTimeout(function(){
            keyTap(16);
            setTimeout(function(){
                keyTap(2);
                setTimeout(function(){
                    keyTap(1);
                    keyTap(15);
                    setTimeout(function(){
                        keyTap(16);
                        setTimeout(function(){
                            if(intro_loop < 6)
                                intro();
                        },250);
                    },400);
                },150);
            },250);
        },400);
    },150);
}

function keyTap(keycode){
    $(document).trigger(jQuery.Event( 'keydown', { which: keyPairs[keycode], keyCode: keyPairs[keycode] } ));
    setTimeout(function(){
        $(document).trigger(jQuery.Event( 'keyup', { which: keyPairs[keycode], keyCode: keyPairs[keycode] } ));
    },200);
}

function reformat(){
    $(".buttons").css("margin", "0");
    $(".buttons").css("margin","0 "+(($("body").innerWidth()-$(".buttons").width())/2)+"px");
}

keyPairs = [49,50,51,52,53,54,55,56,57,48,189,187,
            81,87,69,82,84,89,85,73,79,80,219,221,
            65,83,68,70,71,72,74,75,76,186,222,13,
            90,88,67,86,66,78,77,188,190,191,16,-1];
            
sound1Srcs = ["c3","a0", "a1", "a2", "a3", "b0", "b1", "b2", "b3", "b3","d5", "d12",
              "c1","c7", "a5", "a6", "a7", "b4", "b5", "b6", "b7", "d6","d4", "d8",
              "c2","c5", "a9", "a10","a11","b8", "b9", "b10","b11","d5","d0", "d1",
              "c6","a12","a13","a14","a15","b12","b13","b14","b15","d3","d2", "d1"];
              
sounds = [];

sounds1 = [
    new Howl({urls: ['<%= asset_path('chain4/c0.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c1.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c2.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c3.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c12.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c13.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c14.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/c15.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d2.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d3.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d2.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d3.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d6.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d7.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d6.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d7.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d9.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d9.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d10.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d11.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d12.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d13.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d14.wav')%>']}),
    new Howl({urls: ['<%= asset_path('chain4/d15.wav')%>']}),
    ];
    
combSounds = [];

curSound = 0;
    
pressure = [5,6,7,8,9,11,17,18,21,22,23,29,30,31,32,33,34,41,42];

intro_loop = 0;